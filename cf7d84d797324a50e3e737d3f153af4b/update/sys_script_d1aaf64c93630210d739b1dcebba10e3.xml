<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_import_set_run</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>ERP-Import Errors</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// (function executeRule(current, previous /*null when async*/) {


// 	if(current.inserts >  0){
// 	gs.info("Inside ERP-Import Errors BR");
// 	var errmsg = 'Total: ' + current.total + ' Inserts: ' + current.inserts + ' Error: ' + current.errors;
// 	gs.info("Count from ERP-Import Erros BR" + errmsg); 
// 	var casegr = new GlideRecord('x_1166825_erp_assi_erp_case');
// 	casegr.addQuery('import_set.number',current.set.number);
// 	casegr.query();
	
// 	while(casegr.next()){
// 		//casegr.u_journal_1 = errmsg;
// 		gs.info('in the case table using BR in import set');
// 		casegr.setValue('description',errmsg);
// 		casegr.update();
// 	}
// 	current.update();
// 	}
// })(current, previous);


(function executeRule(current, previous /*null when async*/) {
    // Only proceed if the import set state is completed
    if (current.state != 'completed') {
        gs.info("Inside ERP-Import Errors BR");

        // Add a delay to ensure all processing is complete
        gs.setRunAsUserID(gs.getUserID());
        gs.sleep(5000); // 5-second delay

        // Check if there were any inserts
        if (current.inserts > 0) {
            var errmsg = 'Total: ' + current.total + ' Inserts: ' + current.inserts + ' Errors: ' + current.errors;
            gs.info("Count from ERP-Import Errors BR: " + errmsg); 

            var casegr = new GlideRecord('x_1166825_erp_assi_erp_case');
            casegr.addQuery('import_set', current.sys_id);
            casegr.query();

            while (casegr.next()) {
                gs.info('Updating case table with import set results');
                //casegr.setValue('description', errmsg);
                casegr.update();
            }
        }
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-07-17 17:44:06</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d1aaf64c93630210d739b1dcebba10e3</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>ERP-Import Errors</sys_name>
        <sys_overrides/>
        <sys_package display_value="ERP ASSIST" source="x_1166825_erp_assi">cf7d84d797324a50e3e737d3f153af4b</sys_package>
        <sys_policy/>
        <sys_scope display_value="ERP ASSIST">cf7d84d797324a50e3e737d3f153af4b</sys_scope>
        <sys_update_name>sys_script_d1aaf64c93630210d739b1dcebba10e3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-07-17 20:58:18</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d1aaf64c93630210d739b1dcebba10e3"/>
</record_update>
