<?xml version="1.0" encoding="UTF-8"?><record_update table="sc_cat_item_composite_producer">
    <sc_cat_item_composite_producer action="INSERT_OR_UPDATE">
        <access_type>restricted</access_type>
        <active>false</active>
        <allow_edit>false</allow_edit>
        <availability>on_desktop</availability>
        <billable>false</billable>
        <can_cancel>false</can_cancel>
        <category/>
        <checked_out/>
        <cost>0</cost>
        <custom_cart/>
        <delivery_plan display_value="DEFAULT">523da512c611228900811a37c97c2014</delivery_plan>
        <delivery_plan_script/>
        <delivery_time>1970-01-03 00:00:00</delivery_time>
        <description/>
        <display_price_property>non_zero</display_price_property>
        <entitlement_script/>
        <flow_designer_flow/>
        <fulfillment_automation_level>unspecified</fulfillment_automation_level>
        <group/>
        <hide_sp>false</hide_sp>
        <icon/>
        <ignore_price>true</ignore_price>
        <image/>
        <location/>
        <mandatory_attachment>false</mandatory_attachment>
        <meta/>
        <mobile_hide_price>false</mobile_hide_price>
        <mobile_picture/>
        <mobile_picture_type>use_desktop_picture</mobile_picture_type>
        <model/>
        <name>Copy of Case &amp; Product entry</name>
        <no_attachment_v2>false</no_attachment_v2>
        <no_cart>false</no_cart>
        <no_cart_v2>false</no_cart_v2>
        <no_delivery_time_v2>false</no_delivery_time_v2>
        <no_order>false</no_order>
        <no_order_now>false</no_order_now>
        <no_proceed_checkout>false</no_proceed_checkout>
        <no_quantity>false</no_quantity>
        <no_quantity_v2>false</no_quantity_v2>
        <no_search>false</no_search>
        <no_wishlist_v2>false</no_wishlist_v2>
        <omit_price>false</omit_price>
        <order>0</order>
        <ordered_item_link/>
        <owner display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</owner>
        <picture/>
        <post_insert_script><![CDATA[/**
* This script is executed after the record is generated. 
* `current` Is the GlideRecord produced by Record Producer. Use `current.update()` to update the record
* To access the variables, use `producer.var1` where var1 is the name of the variable
* To access the Record Producer use `cat_item`
*/]]></post_insert_script>
        <preview>JavaScript: popupOpenStandard("com.glideapp.servicecatalog_cat_item_view.do?v=1&amp;sysparm_id=9aea4638970b4290e3e737d3f153afe4&amp;sysparm_preview=true", "summary");</preview>
        <price>0</price>
        <published_ref/>
        <recurring_frequency/>
        <redirect_url>generated_record</redirect_url>
        <request_method/>
        <roles/>
        <save_options/>
        <save_script><![CDATA[/**
* This script is executed at every step save in Catalog Builder. 
* This script is executed before `Script` is executed.
* `current` Is the GlideRecord produced by Record Producer. 
* To access the variables, use `producer.var1` where var1 is the name of the variable
* To access the Record Producer use `cat_item`
*/]]></save_script>
        <sc_catalogs/>
        <sc_ic_item_staging/>
        <sc_ic_version/>
        <sc_template/>
        <script><![CDATA[/** This script is executed before the Record is generated
* `current`- GlideRecord produced by Record Producer
* Don't use `current.update()` or `current.insert()` as the record is generated by Record Producer
* Don't use `current.setValue('sys_class_name', 'xxx')` as this will trigger reparent flow and can cause data loss
* Avoid `current.setAbortAction()` and generate a separate record
* Use `producer.var1` to access variables
*/



var jsonString = producer.var1;

try {
  var products = JSON.parse(jsonString);

  if (Array.isArray(products)) {
    for (var i = 0; i < products.length; i++) {
      var product = products[i];
      var Name = product['Name'];
      var Type = product['Type'];

      if (Name && Type) {  // Ensure both Name and Type are present
        var gr = new GlideRecord('x_1166825_erp_assi_erp_product_characteristics');
        gr.initialize();
        gr.setValue('name', Name); // Assuming 'name' is the correct field name
        gr.setValue('case', Type); // Assuming 'type' is the correct field name
        gr.insert();
      }
    }
  } else {
    gs.error('Parsed JSON is not an array');
  }
} catch (e) {
  gs.error('Error parsing JSON: ' + e.message);
}
/*
var jsonString = producer.var1;;
try {
  // Assuming `jsonString` contains the JSON data to be parsed
  
  var products = JSON.parse(jsonString);

  if (Array.isArray(products)) {
    // Access the main records created by the composite record producer
    var firstRecordSysId = producer.encodedRecordID; // sys_id of the first record 
    var secondRecordSysId = producer.encodedSecondRecordID; // sys_id of the second record 

    if (firstRecordSysId && secondRecordSysId) {
      // Iterate over the JSON array to create related records in the related list table
      for (var i = 0; i < products.length; i++) {
        var product = products[i];
        var Name = product['Name'];
        var Type = product['Type'];

        if (Name && Type) {  // Ensure both Name and Type are present
          var relatedRecord = new GlideRecord('x_1166825_related_table');
          relatedRecord.initialize();
          relatedRecord.setValue('name', Name);  // Replace with actual field name in related table
          relatedRecord.setValue('type', Type);  // Replace with actual field name in related table
          relatedRecord.setValue('second_table_reference', secondRecordSysId); // Set the reference to the second table record
          relatedRecord.insert();
        }
      }
    } else {
      gs.error('Failed to retrieve sys_id of the main records created by the record producer');
    }
  } else {
    gs.error('Parsed JSON is not an array');
  }
} catch (e) {
  gs.error('Error parsing JSON: ' + e.message);
}



try {
  // Assuming `jsonString` contains the JSON data to be parsed
  var jsonString = producer.var1;  // Change producer.var1 to the actual variable holding JSON data
  var products = JSON.parse(jsonString);

  if (Array.isArray(products)) {
    // Retrieve the sys_id of the created ERP Product from the record producer

    var erpProductSysId = producer.encodedSecondRecordID; // Assuming 'u_erp_product' holds the sys_id of the created ERP Product
    gs.log('ERP Product sys_id: ' + erpProductSysId);

    if (erpProductSysId) {
      for (var i = 0; i < products.length; i++) {
        var product = products[i];
        var Name = product['Name'];
        var Type = product['Type'];
        gs.log('Processing product: ' + Name + ', ' + Type);

        if (Name && Type) {  // Ensure both Name and Type are present
          // Create the Product Characteristics record
          var productCharacteristic = new GlideRecord('x_1166825_erp_assi_erp_product_characteristics');
          productCharacteristic.initialize();
          productCharacteristic.setValue('name', Name);  // Replace with actual field name in Product Characteristics
          productCharacteristic.setValue('type', Type);  // Replace with actual field name in Product Characteristics
          var productCharacteristicSysId = productCharacteristic.insert();
          gs.log('Product Characteristic sys_id: ' + productCharacteristicSysId);

          if (productCharacteristicSysId) {
            // Create the many-to-many relationship record
            var m2mRecord = new GlideRecord('x_1166825_erp_assi_m2m_x_1166825_er_x_1166825_er');
            m2mRecord.initialize();
            m2mRecord.setValue('x_1166825_erp_assi_erp_product', erpProductSysId);  // Link to ERP Product
            m2mRecord.setValue('x_1166825_erp_assi_erp_product_character', productCharacteristicSysId);  // Link to Product Characteristic
            m2mRecord.insert();
            gs.log('Created m2m record linking ERP Product and Product Characteristic');
          }
        }
      }
    } else {
      gs.error('Failed to retrieve sys_id of the ERP Product created by the record producer');
    }
  } else {
    gs.error('Parsed JSON is not an array');
  }
} catch (e) {
  gs.error('Error parsing JSON: ' + e.message);
}
*/]]></script>
        <short_description>Copy of Used to add info in ERP Case and ERP Product</short_description>
        <show_variable_help_on_load>false</show_variable_help_on_load>
        <start_closed>false</start_closed>
        <state/>
        <sys_class_name>sc_cat_item_composite_producer</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-25 01:38:24</sys_created_on>
        <sys_id>9aea4638970b4290e3e737d3f153afe4</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Copy of Case &amp; Product entry</sys_name>
        <sys_package display_value="ERP ASSIST" source="x_1166825_erp_assi">cf7d84d797324a50e3e737d3f153af4b</sys_package>
        <sys_policy/>
        <sys_scope display_value="ERP ASSIST">cf7d84d797324a50e3e737d3f153af4b</sys_scope>
        <sys_update_name>sc_cat_item_composite_producer_9aea4638970b4290e3e737d3f153afe4</sys_update_name>
        <sys_updated_by>system</sys_updated_by>
        <sys_updated_on>2024-07-02 18:03:33</sys_updated_on>
        <table_name>x_1166825_erp_assi_erp_case</table_name>
        <taxonomy_topic/>
        <template/>
        <template_manager_roles/>
        <type>item</type>
        <use_sc_layout>true</use_sc_layout>
        <vendor/>
        <version>41</version>
        <view/>
        <visible_bundle>true</visible_bundle>
        <visible_guide>true</visible_guide>
        <visible_standalone>true</visible_standalone>
        <workflow/>
    </sc_cat_item_composite_producer>
    <sys_translated_text action="delete_multiple" query="documentkey=9aea4638970b4290e3e737d3f153afe4"/>
    <fx_price action="delete_multiple" query="id=9aea4638970b4290e3e737d3f153afe4"/>
    <fx_price action="INSERT_OR_UPDATE">
        <amount>0</amount>
        <currency display_value="INR">INR</currency>
        <field>price</field>
        <id>9aea4638970b4290e3e737d3f153afe4</id>
        <parent/>
        <reference_amount>0</reference_amount>
        <reference_currency display_value="USD">USD</reference_currency>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-25 01:38:24</sys_created_on>
        <sys_id>1eea4638970b4290e3e737d3f153afea</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-25 01:38:26</sys_updated_on>
        <table>sc_cat_item_composite_producer</table>
        <type>calculated</type>
    </fx_price>
</record_update>
