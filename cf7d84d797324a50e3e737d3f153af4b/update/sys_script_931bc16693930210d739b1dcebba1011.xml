<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1166825_erp_assi_erp_product</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>ERP product- Case import set assignment</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    // Get the import set reference from the current product
    var importSetRef = current.getValue('import_set');

    // Log the import set reference for debugging
    gs.info('After Business Rule: Import Set Reference: ' + importSetRef);

    // Ensure the import set reference is not empty
    if (importSetRef) {
        // Query the ERP case table for cases with the same import set reference
        var caseGR = new GlideRecord('x_1166825_erp_assi_erp_case');
        caseGR.addQuery('import_set', importSetRef); // Use the correct field name
        caseGR.query();

        if (caseGR.next()) {
            // Log the found case sys_id
            gs.info('Found ERP Case with Sys ID: ' + caseGR.sys_id);

            // Set the ERP case reference field in the product record
            current.setValue('u_reference_1', caseGR.sys_id); // Ensure 'u_reference_1' is the correct field for ERP Case reference
            current.update(); 

            // Log the update
            gs.info('Updated product record with Sys ID: ' + current.sys_id + ' and ERP Case Reference: ' + caseGR.sys_id);
        } else {
            gs.error('No ERP Case found with the given import set reference: ' + importSetRef);
        }
    } else {
        gs.error('After Business Rule: No import set reference found in the current product.');
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-07-12 17:48:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>931bc16693930210d739b1dcebba1011</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>ERP product- Case import set assignment</sys_name>
        <sys_overrides/>
        <sys_package display_value="ERP ASSIST" source="x_1166825_erp_assi">cf7d84d797324a50e3e737d3f153af4b</sys_package>
        <sys_policy/>
        <sys_scope display_value="ERP ASSIST">cf7d84d797324a50e3e737d3f153af4b</sys_scope>
        <sys_update_name>sys_script_931bc16693930210d739b1dcebba1011</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-07-12 18:37:24</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=931bc16693930210d739b1dcebba1011"/>
</record_update>
